<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="45" passed="40" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-20T15:30:28 IDT" name="Suite" finished-at="2022-06-20T16:06:02 IDT" duration-ms="2134134">
    <groups>
    </groups>
    <test started-at="2022-06-20T15:30:28 IDT" name="Test" finished-at="2022-06-20T16:06:02 IDT" duration-ms="2134134">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.LoginTest@35835e65]" started-at="2022-06-20T15:34:15 IDT" name="setup" finished-at="2022-06-20T15:34:36 IDT" duration-ms="21071" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginFailedTest()[pri:0, instance:tests.LoginTest@35835e65]" started-at="2022-06-20T15:34:36 IDT" name="loginFailedTest" description="Login with wrong credentials" finished-at="2022-06-20T15:34:47 IDT" duration-ms="10793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFailedTest -->
        <test-method signature="loginSucceedTest()[pri:0, instance:tests.LoginTest@35835e65]" started-at="2022-06-20T15:34:47 IDT" name="loginSucceedTest" description="Login with right credentials" finished-at="2022-06-20T15:34:59 IDT" duration-ms="12766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSucceedTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@35835e65]" started-at="2022-06-20T15:34:59 IDT" name="tearDown" finished-at="2022-06-20T15:35:05 IDT" duration-ms="5254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.CreateNewFlexibleTripByMusicCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByMusicCategory@30814f43]" started-at="2022-06-20T15:36:40 IDT" name="setup" finished-at="2022-06-20T15:36:44 IDT" duration-ms="3940" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByMusicCategory@30814f43]" started-at="2022-06-20T15:36:44 IDT" name="setup" finished-at="2022-06-20T15:36:51 IDT" duration-ms="7483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByMusicCategory()[pri:0, instance:tests.CreateNewFlexibleTripByMusicCategory@30814f43]" started-at="2022-06-20T15:36:51 IDT" name="createNewFlexibleTripByMusicCategory" description="valid the music sub category graph value" finished-at="2022-06-20T15:37:24 IDT" duration-ms="32226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByMusicCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByMusicCategory@30814f43]" started-at="2022-06-20T15:37:24 IDT" name="tearDown" finished-at="2022-06-20T15:37:29 IDT" duration-ms="5250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByMusicCategory -->
      <class name="tests.CreateNewFlexibleSportTrip">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleSportTrip@69da0b12]" started-at="2022-06-20T15:59:49 IDT" name="setup" finished-at="2022-06-20T15:59:59 IDT" duration-ms="9797" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleSportTrip@69da0b12]" started-at="2022-06-20T15:59:59 IDT" name="setup" finished-at="2022-06-20T16:00:06 IDT" duration-ms="7007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleSportTrip()[pri:0, instance:tests.CreateNewFlexibleSportTrip@69da0b12]" started-at="2022-06-20T16:00:06 IDT" name="createNewFlexibleSportTrip" description="valid the sport category graph value" finished-at="2022-06-20T16:00:38 IDT" duration-ms="31902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleSportTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleSportTrip@69da0b12]" started-at="2022-06-20T16:00:38 IDT" name="tearDown" finished-at="2022-06-20T16:00:43 IDT" duration-ms="5307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleSportTrip -->
      <class name="tests.CreateNewFlexibleTripByCultureCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByCultureCategory@7144655b]" started-at="2022-06-20T15:32:23 IDT" name="setup" finished-at="2022-06-20T15:32:41 IDT" duration-ms="17351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByCultureCategory@7144655b]" started-at="2022-06-20T15:32:41 IDT" name="setup" finished-at="2022-06-20T15:32:50 IDT" duration-ms="9228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByCultureCategory()[pri:0, instance:tests.CreateNewFlexibleTripByCultureCategory@7144655b]" started-at="2022-06-20T15:32:50 IDT" name="createNewFlexibleTripByCultureCategory" description="valid the culture sub category graph value" finished-at="2022-06-20T15:33:30 IDT" duration-ms="39774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByCultureCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByCultureCategory@7144655b]" started-at="2022-06-20T15:33:30 IDT" name="tearDown" finished-at="2022-06-20T15:33:35 IDT" duration-ms="5279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByCultureCategory -->
      <class name="tests.CreateNewFlexibleTripByBarMitzvahCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByBarMitzvahCategory@7a231dfd]" started-at="2022-06-20T15:35:53 IDT" name="setup" finished-at="2022-06-20T15:35:57 IDT" duration-ms="4138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByBarMitzvahCategory@7a231dfd]" started-at="2022-06-20T15:35:57 IDT" name="setup" finished-at="2022-06-20T15:36:04 IDT" duration-ms="7133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByBarMitzvahCategory()[pri:0, instance:tests.CreateNewFlexibleTripByBarMitzvahCategory@7a231dfd]" started-at="2022-06-20T15:36:04 IDT" name="createNewFlexibleTripByBarMitzvahCategory" description="valid the bar mitzvah sub category graph value" finished-at="2022-06-20T15:36:35 IDT" duration-ms="30272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByBarMitzvahCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByBarMitzvahCategory@7a231dfd]" started-at="2022-06-20T15:36:35 IDT" name="tearDown" finished-at="2022-06-20T15:36:40 IDT" duration-ms="5263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByBarMitzvahCategory -->
      <class name="tests.CreateNewFlexibleTripByExtendedFamilyCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByExtendedFamilyCategory@3cee53dc]" started-at="2022-06-20T15:56:08 IDT" name="setup" finished-at="2022-06-20T15:56:20 IDT" duration-ms="11560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByExtendedFamilyCategory@3cee53dc]" started-at="2022-06-20T15:56:20 IDT" name="setup" finished-at="2022-06-20T15:56:27 IDT" duration-ms="7666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByExtendedFamilyCategory()[pri:0, instance:tests.CreateNewFlexibleTripByExtendedFamilyCategory@3cee53dc]" started-at="2022-06-20T15:56:27 IDT" name="createNewFlexibleTripByExtendedFamilyCategory" description="valid the extendend family sub category graph value" finished-at="2022-06-20T15:57:38 IDT" duration-ms="71171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByExtendedFamilyCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByExtendedFamilyCategory@3cee53dc]" started-at="2022-06-20T15:57:38 IDT" name="tearDown" finished-at="2022-06-20T15:57:44 IDT" duration-ms="5314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByExtendedFamilyCategory -->
      <class name="tests.CreateNewFlexibleTripByBasketballCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByBasketballCategory@1fde4f40]" started-at="2022-06-20T15:37:29 IDT" name="setup" finished-at="2022-06-20T15:37:33 IDT" duration-ms="3954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByBasketballCategory@1fde4f40]" started-at="2022-06-20T15:37:33 IDT" name="setup" finished-at="2022-06-20T15:37:40 IDT" duration-ms="7431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByBasketballCategory()[pri:0, instance:tests.CreateNewFlexibleTripByBasketballCategory@1fde4f40]" started-at="2022-06-20T15:37:40 IDT" name="createNewFlexibleTripByBasketballCategory" description="valid the basketball sub category graph value" finished-at="2022-06-20T15:38:19 IDT" duration-ms="38541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByBasketballCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByBasketballCategory@1fde4f40]" started-at="2022-06-20T15:38:19 IDT" name="tearDown" finished-at="2022-06-20T15:38:24 IDT" duration-ms="5250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByBasketballCategory -->
      <class name="tests.CreateNewFlexibleTripByCyclingCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByCyclingCategory@49cf9028]" started-at="2022-06-20T15:38:24 IDT" name="setup" finished-at="2022-06-20T15:38:28 IDT" duration-ms="3886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByCyclingCategory@49cf9028]" started-at="2022-06-20T15:38:28 IDT" name="setup" finished-at="2022-06-20T15:38:35 IDT" duration-ms="7259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByCyclingCategory()[pri:0, instance:tests.CreateNewFlexibleTripByCyclingCategory@49cf9028]" started-at="2022-06-20T15:38:35 IDT" name="createNewFlexibleTripByCyclingCategory" description="valid the cycling sub category graph value" finished-at="2022-06-20T15:39:14 IDT" duration-ms="38589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByCyclingCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByCyclingCategory@49cf9028]" started-at="2022-06-20T15:39:14 IDT" name="tearDown" finished-at="2022-06-20T15:39:19 IDT" duration-ms="5277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByCyclingCategory -->
      <class name="tests.CreateNewFlexibleTripByMountainsAndForestsCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByMountainsAndForestsCategory@4992613f]" started-at="2022-06-20T15:42:27 IDT" name="setup" finished-at="2022-06-20T15:42:32 IDT" duration-ms="5058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByMountainsAndForestsCategory@4992613f]" started-at="2022-06-20T15:42:32 IDT" name="setup" finished-at="2022-06-20T15:42:40 IDT" duration-ms="7436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByMountainsAndForestsCategory()[pri:0, instance:tests.CreateNewFlexibleTripByMountainsAndForestsCategory@4992613f]" started-at="2022-06-20T15:42:40 IDT" name="createNewFlexibleTripByMountainsAndForestsCategory" description="valid the green sub category graph value" finished-at="2022-06-20T15:43:16 IDT" duration-ms="36061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByMountainsAndForestsCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByMountainsAndForestsCategory@4992613f]" started-at="2022-06-20T15:43:16 IDT" name="tearDown" finished-at="2022-06-20T15:43:21 IDT" duration-ms="5261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByMountainsAndForestsCategory -->
      <class name="tests.CreateNewFlexibleFamilyTrip">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleFamilyTrip@6fd5717c]" started-at="2022-06-20T15:43:21 IDT" name="setup" finished-at="2022-06-20T15:43:26 IDT" duration-ms="5177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleFamilyTrip@6fd5717c]" started-at="2022-06-20T15:43:26 IDT" name="setup" finished-at="2022-06-20T15:43:33 IDT" duration-ms="7004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleFamilyTrip()[pri:0, instance:tests.CreateNewFlexibleFamilyTrip@6fd5717c]" started-at="2022-06-20T15:43:33 IDT" name="createNewFlexibleFamilyTrip" description="valid the family category graph value" finished-at="2022-06-20T15:44:33 IDT" duration-ms="59519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleFamilyTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleFamilyTrip@6fd5717c]" started-at="2022-06-20T15:44:33 IDT" name="tearDown" finished-at="2022-06-20T15:44:38 IDT" duration-ms="5302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleFamilyTrip -->
      <class name="tests.CreateNewFlexibleTripByWineAndGastronomyCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByWineAndGastronomyCategory@50194e8d]" started-at="2022-06-20T15:54:57 IDT" name="setup" finished-at="2022-06-20T15:55:05 IDT" duration-ms="8008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByWineAndGastronomyCategory@50194e8d]" started-at="2022-06-20T15:55:05 IDT" name="setup" finished-at="2022-06-20T15:55:12 IDT" duration-ms="7341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByWineAndGastronomyCategory()[pri:0, instance:tests.CreateNewFlexibleTripByWineAndGastronomyCategory@50194e8d]" started-at="2022-06-20T15:55:12 IDT" name="createNewFlexibleTripByWineAndGastronomyCategory" description="valid the wine and gastronomy sub category graph value" finished-at="2022-06-20T15:56:03 IDT" duration-ms="50468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByWineAndGastronomyCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByWineAndGastronomyCategory@50194e8d]" started-at="2022-06-20T15:56:03 IDT" name="tearDown" finished-at="2022-06-20T15:56:08 IDT" duration-ms="5306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByWineAndGastronomyCategory -->
      <class name="tests.CreateNewFlexibleTripByTennisCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByTennisCategory@408b87aa]" started-at="2022-06-20T16:02:17 IDT" name="setup" finished-at="2022-06-20T16:02:25 IDT" duration-ms="8156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByTennisCategory@408b87aa]" started-at="2022-06-20T16:02:25 IDT" name="setup" finished-at="2022-06-20T16:02:33 IDT" duration-ms="7333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByTennisCategory()[pri:0, instance:tests.CreateNewFlexibleTripByTennisCategory@408b87aa]" started-at="2022-06-20T16:02:33 IDT" name="createNewFlexibleTripByTennisCategory" description="valid the tennis sub category graph value" finished-at="2022-06-20T16:03:11 IDT" duration-ms="38453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByTennisCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByTennisCategory@408b87aa]" started-at="2022-06-20T16:03:11 IDT" name="tearDown" finished-at="2022-06-20T16:03:16 IDT" duration-ms="5247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByTennisCategory -->
      <class name="tests.CreateNewFlexibleTripByBirthdayCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByBirthdayCategory@787f32b7]" started-at="2022-06-20T16:04:33 IDT" name="setup" finished-at="2022-06-20T16:04:41 IDT" duration-ms="7996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByBirthdayCategory@787f32b7]" started-at="2022-06-20T16:04:41 IDT" name="setup" finished-at="2022-06-20T16:04:48 IDT" duration-ms="7313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByBirthdayCategory()[pri:0, instance:tests.CreateNewFlexibleTripByBirthdayCategory@787f32b7]" started-at="2022-06-20T16:04:48 IDT" name="createNewFlexibleTripByBirthdayCategory" description="valid the birthday sub category graph value" finished-at="2022-06-20T16:05:57 IDT" duration-ms="68714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByBirthdayCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByBirthdayCategory@787f32b7]" started-at="2022-06-20T16:05:57 IDT" name="tearDown" finished-at="2022-06-20T16:06:02 IDT" duration-ms="5293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByBirthdayCategory -->
      <class name="tests.CreateNewFlexibleTripByAnnualCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByAnnualCategory@79b08632]" started-at="2022-06-20T16:03:16 IDT" name="setup" finished-at="2022-06-20T16:03:40 IDT" duration-ms="24007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByAnnualCategory@79b08632]" started-at="2022-06-20T16:03:40 IDT" name="setup" finished-at="2022-06-20T16:03:49 IDT" duration-ms="8799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByAnnualCategory()[pri:0, instance:tests.CreateNewFlexibleTripByAnnualCategory@79b08632]" started-at="2022-06-20T16:03:49 IDT" name="createNewFlexibleTripByAnnualCategory" description="valid the anual sub category graph value" finished-at="2022-06-20T16:04:28 IDT" duration-ms="38713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByAnnualCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByAnnualCategory@79b08632]" started-at="2022-06-20T16:04:28 IDT" name="tearDown" finished-at="2022-06-20T16:04:33 IDT" duration-ms="5260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByAnnualCategory -->
      <class name="tests.CreateNewFlexibleTripPresetDestTest">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripPresetDestTest@5c82cd4f]" started-at="2022-06-20T15:33:35 IDT" name="setup" finished-at="2022-06-20T15:33:42 IDT" duration-ms="7044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripPresetDestTest@5c82cd4f]" started-at="2022-06-20T15:33:42 IDT" name="setup" finished-at="2022-06-20T15:33:50 IDT" duration-ms="7703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripPresetDest()[pri:0, instance:tests.CreateNewFlexibleTripPresetDestTest@5c82cd4f]" started-at="2022-06-20T15:33:50 IDT" name="createNewFlexibleTripPresetDest" description="valid tirp by popular city" finished-at="2022-06-20T15:34:10 IDT" duration-ms="19709" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button class="btn-dark-blue btn" dir="ltr" type="button" title="" style="">...</button> is not clickable at point (841, 578). Other element would receive the click: <div class="react-joyride__overlay" style="cursor: pointer; height: 6502px; pointer-events: auto; inset: 0px; overflow: hidden; position: absolute; z-index: 1000; background-color: rgba(9, 14, 40, 0.4); mix-blend-mode: hard-light;">...</div>
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'RAZ_VARDI', ip: '192.168.1.19', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [caad7ea9e45dc162daca6f11bc6e603e, clickElement {id=2a7c75fd-d974-4728-8e8a-d6cdef666e5f}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\razva\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:53677}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:53677/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (caad7ea9e45dc162daca6f11bc6e603e)] -> css selector: [class='btn-dark-blue btn']]
Session ID: caad7ea9e45dc162daca6f11bc6e603e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button class="btn-dark-blue btn" dir="ltr" type="button" title="" style="">...</button> is not clickable at point (841, 578). Other element would receive the click: <div class="react-joyride__overlay" style="cursor: pointer; height: 6502px; pointer-events: auto; inset: 0px; overflow: hidden; position: absolute; z-index: 1000; background-color: rgba(9, 14, 40, 0.4); mix-blend-mode: hard-light;">...</div>
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'RAZ_VARDI', ip: '192.168.1.19', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [caad7ea9e45dc162daca6f11bc6e603e, clickElement {id=2a7c75fd-d974-4728-8e8a-d6cdef666e5f}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\razva\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:53677}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:53677/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (caad7ea9e45dc162daca6f11bc6e603e)] -> css selector: [class='btn-dark-blue btn']]
Session ID: caad7ea9e45dc162daca6f11bc6e603e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy18.click(Unknown Source)
at pageObjects.BasePage.click(BasePage.java:29)
at pageObjects.MainPage.createNewFlexibleTripPresetDest(MainPage.java:366)
at tests.CreateNewFlexibleTripPresetDestTest.createNewFlexibleTripPresetDest(CreateNewFlexibleTripPresetDestTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripPresetDest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripPresetDestTest@5c82cd4f]" started-at="2022-06-20T15:34:10 IDT" name="tearDown" finished-at="2022-06-20T15:34:15 IDT" duration-ms="5312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripPresetDestTest -->
      <class name="tests.CreateNewFlexibleThemeTrip">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleThemeTrip@26a4551a]" started-at="2022-06-20T15:49:50 IDT" name="setup" finished-at="2022-06-20T15:49:55 IDT" duration-ms="5097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleThemeTrip@26a4551a]" started-at="2022-06-20T15:49:55 IDT" name="setup" finished-at="2022-06-20T15:50:02 IDT" duration-ms="7553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleThemeTrip()[pri:0, instance:tests.CreateNewFlexibleThemeTrip@26a4551a]" started-at="2022-06-20T15:50:02 IDT" name="createNewFlexibleThemeTrip" description="valid the theme category graph value" finished-at="2022-06-20T15:51:06 IDT" duration-ms="63601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleThemeTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleThemeTrip@26a4551a]" started-at="2022-06-20T15:51:06 IDT" name="tearDown" finished-at="2022-06-20T15:51:11 IDT" duration-ms="5311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleThemeTrip -->
      <class name="tests.CreateTripByDestinationOnlyTest">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateTripByDestinationOnlyTest@73ad4ecc]" started-at="2022-06-20T15:58:49 IDT" name="setup" finished-at="2022-06-20T15:58:57 IDT" duration-ms="8001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateTripByDestinationOnlyTest@73ad4ecc]" started-at="2022-06-20T15:58:57 IDT" name="setup" finished-at="2022-06-20T15:59:04 IDT" duration-ms="7632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createTripByDestinationOnly()[pri:0, instance:tests.CreateTripByDestinationOnlyTest@73ad4ecc]" started-at="2022-06-20T15:59:04 IDT" name="createTripByDestinationOnly" description="create trip with destination only" finished-at="2022-06-20T15:59:44 IDT" duration-ms="39574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTripByDestinationOnly -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateTripByDestinationOnlyTest@73ad4ecc]" started-at="2022-06-20T15:59:44 IDT" name="tearDown" finished-at="2022-06-20T15:59:49 IDT" duration-ms="5293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateTripByDestinationOnlyTest -->
      <class name="tests.CreateNewFlexibleTripByHoneymoonCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByHoneymoonCategory@2b61a019]" started-at="2022-06-20T15:39:19 IDT" name="setup" finished-at="2022-06-20T15:39:23 IDT" duration-ms="3828" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByHoneymoonCategory@2b61a019]" started-at="2022-06-20T15:39:23 IDT" name="setup" finished-at="2022-06-20T15:39:30 IDT" duration-ms="7015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByHoneymoonCategory()[pri:0, instance:tests.CreateNewFlexibleTripByHoneymoonCategory@2b61a019]" started-at="2022-06-20T15:39:30 IDT" name="createNewFlexibleTripByHoneymoonCategory" description="valid the honeymoon sub category graph value" finished-at="2022-06-20T15:40:25 IDT" duration-ms="54874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByHoneymoonCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByHoneymoonCategory@2b61a019]" started-at="2022-06-20T15:40:25 IDT" name="tearDown" finished-at="2022-06-20T15:40:30 IDT" duration-ms="5275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByHoneymoonCategory -->
      <class name="tests.OpenLinksTest">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:51:11 IDT" name="setup" finished-at="2022-06-20T15:51:19 IDT" duration-ms="7963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:51:19 IDT" name="setup" finished-at="2022-06-20T15:51:27 IDT" duration-ms="7666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="tc1_openDestinationsTest()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:51:27 IDT" name="tc1_openDestinationsTest" description="Open Destinations" finished-at="2022-06-20T15:51:28 IDT" duration-ms="1267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc1_openDestinationsTest -->
        <test-method signature="tc2_openmMyTripsTest()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:51:28 IDT" name="tc2_openmMyTripsTest" description="Open mytrip" finished-at="2022-06-20T15:51:35 IDT" duration-ms="7155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc2_openmMyTripsTest -->
        <test-method signature="tc3_openCovidAssistTest()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:51:35 IDT" name="tc3_openCovidAssistTest" description="Open covid assist" finished-at="2022-06-20T15:51:41 IDT" duration-ms="6329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc3_openCovidAssistTest -->
        <test-method signature="tc4_openServiceHotelTest()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:51:41 IDT" name="tc4_openServiceHotelTest" description="Open hotels" finished-at="2022-06-20T15:51:49 IDT" duration-ms="7599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc4_openServiceHotelTest -->
        <test-method signature="tc5_openServiceFlightsTest()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:51:49 IDT" name="tc5_openServiceFlightsTest" description="Open flights" finished-at="2022-06-20T15:51:57 IDT" duration-ms="7597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc5_openServiceFlightsTest -->
        <test-method signature="tc6_openServiceExperiencesTest()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:51:57 IDT" name="tc6_openServiceExperiencesTest" description="Open experiences" finished-at="2022-06-20T15:52:04 IDT" duration-ms="7800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc6_openServiceExperiencesTest -->
        <test-method signature="tc7_openServiceInsuranceTest()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:52:04 IDT" name="tc7_openServiceInsuranceTest" description="Open insurance" finished-at="2022-06-20T15:52:13 IDT" duration-ms="8641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc7_openServiceInsuranceTest -->
        <test-method signature="tc8_openServiceCarRentalTest()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:52:13 IDT" name="tc8_openServiceCarRentalTest" description="Open car rental" finished-at="2022-06-20T15:52:22 IDT" duration-ms="8593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc8_openServiceCarRentalTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.OpenLinksTest@3fdecce]" started-at="2022-06-20T15:52:22 IDT" name="tearDown" finished-at="2022-06-20T15:52:27 IDT" duration-ms="5386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.OpenLinksTest -->
      <class name="tests.CreateNewFlexibleBusinessTrip">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleBusinessTrip@290aeb20]" started-at="2022-06-20T15:57:44 IDT" name="setup" finished-at="2022-06-20T15:57:52 IDT" duration-ms="8079" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleBusinessTrip@290aeb20]" started-at="2022-06-20T15:57:52 IDT" name="setup" finished-at="2022-06-20T15:57:59 IDT" duration-ms="7384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleBusinessTrip()[pri:0, instance:tests.CreateNewFlexibleBusinessTrip@290aeb20]" started-at="2022-06-20T15:57:59 IDT" name="createNewFlexibleBusinessTrip" description="valid the business category graph value" finished-at="2022-06-20T15:58:44 IDT" duration-ms="44400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleBusinessTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleBusinessTrip@290aeb20]" started-at="2022-06-20T15:58:44 IDT" name="tearDown" finished-at="2022-06-20T15:58:49 IDT" duration-ms="5281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleBusinessTrip -->
      <class name="tests.CreateNewFlexibleNatureTrip">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleNatureTrip@17b64941]" started-at="2022-06-20T15:46:14 IDT" name="setup" finished-at="2022-06-20T15:46:20 IDT" duration-ms="6289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleNatureTrip@17b64941]" started-at="2022-06-20T15:46:20 IDT" name="setup" finished-at="2022-06-20T15:46:28 IDT" duration-ms="7591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleNatureTrip()[pri:0, instance:tests.CreateNewFlexibleNatureTrip@17b64941]" started-at="2022-06-20T15:46:28 IDT" name="createNewFlexibleNatureTrip" description="valid the nature category graph value" finished-at="2022-06-20T15:47:18 IDT" duration-ms="49807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleNatureTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleNatureTrip@17b64941]" started-at="2022-06-20T15:47:18 IDT" name="tearDown" finished-at="2022-06-20T15:47:23 IDT" duration-ms="5315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleNatureTrip -->
      <class name="tests.CreateNewFlexibleTripByAnniversaryCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByAnniversaryCategory@11a00961]" started-at="2022-06-20T15:40:30 IDT" name="setup" finished-at="2022-06-20T15:40:36 IDT" duration-ms="5714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByAnniversaryCategory@11a00961]" started-at="2022-06-20T15:40:36 IDT" name="setup" finished-at="2022-06-20T15:40:43 IDT" duration-ms="7280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByAnniversaryCategory()[pri:0, instance:tests.CreateNewFlexibleTripByAnniversaryCategory@11a00961]" started-at="2022-06-20T15:40:43 IDT" name="createNewFlexibleTripByAnniversaryCategory" description="valid the anniversary sub category graph value" finished-at="2022-06-20T15:41:26 IDT" duration-ms="43140" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=102.0.5005.115)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'RAZ_VARDI', ip: '192.168.1.19', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4239458a0156f0c92cfc0c0bf1e3f591, clickElement {id=3b506797-f239-41e2-86ac-ef68e37935b6}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\razva\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54346}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54346/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (4239458a0156f0c92cfc0c0bf1e3f591)] -> css selector: [class='app-header__logo']]
Session ID: 4239458a0156f0c92cfc0c0bf1e3f591]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=102.0.5005.115)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'RAZ_VARDI', ip: '192.168.1.19', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4239458a0156f0c92cfc0c0bf1e3f591, clickElement {id=3b506797-f239-41e2-86ac-ef68e37935b6}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\razva\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54346}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54346/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (4239458a0156f0c92cfc0c0bf1e3f591)] -> css selector: [class='app-header__logo']]
Session ID: 4239458a0156f0c92cfc0c0bf1e3f591
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy18.click(Unknown Source)
at pageObjects.BasePage.click(BasePage.java:29)
at pageObjects.MainPage.createNewFlexibleRomanticTripByCategory(MainPage.java:497)
at tests.CreateNewFlexibleTripByAnniversaryCategory.createNewFlexibleTripByAnniversaryCategory(CreateNewFlexibleTripByAnniversaryCategory.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByAnniversaryCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByAnniversaryCategory@11a00961]" started-at="2022-06-20T15:41:26 IDT" name="tearDown" finished-at="2022-06-20T15:41:31 IDT" duration-ms="5294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByAnniversaryCategory -->
      <class name="tests.CreateNewFlexibleTripByThemeParksCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByThemeParksCategory@4d774249]" started-at="2022-06-20T15:45:27 IDT" name="setup" finished-at="2022-06-20T15:45:31 IDT" duration-ms="3992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByThemeParksCategory@4d774249]" started-at="2022-06-20T15:45:31 IDT" name="setup" finished-at="2022-06-20T15:45:38 IDT" duration-ms="6970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByThemeParksCategory()[pri:0, instance:tests.CreateNewFlexibleTripByThemeParksCategory@4d774249]" started-at="2022-06-20T15:45:38 IDT" name="createNewFlexibleTripByThemeParksCategory" description="valid the theme parks sub category graph value" finished-at="2022-06-20T15:46:09 IDT" duration-ms="31022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByThemeParksCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByThemeParksCategory@4d774249]" started-at="2022-06-20T15:46:09 IDT" name="tearDown" finished-at="2022-06-20T15:46:14 IDT" duration-ms="5248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByThemeParksCategory -->
      <class name="tests.CreateNewFlexibleTripByLeisureCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByLeisureCategory@2764c546]" started-at="2022-06-20T16:00:43 IDT" name="setup" finished-at="2022-06-20T16:00:52 IDT" duration-ms="8466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByLeisureCategory@2764c546]" started-at="2022-06-20T16:00:52 IDT" name="setup" finished-at="2022-06-20T16:00:59 IDT" duration-ms="7289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByLeisureCategory()[pri:0, instance:tests.CreateNewFlexibleTripByLeisureCategory@2764c546]" started-at="2022-06-20T16:00:59 IDT" name="createNewFlexibleTripByLeisureCategory" description="valid the leisure sub category graph value" finished-at="2022-06-20T16:01:38 IDT" duration-ms="38690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByLeisureCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByLeisureCategory@2764c546]" started-at="2022-06-20T16:01:38 IDT" name="tearDown" finished-at="2022-06-20T16:01:43 IDT" duration-ms="5250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByLeisureCategory -->
      <class name="tests.OpenExistingTrip">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.OpenExistingTrip@59496961]" started-at="2022-06-20T16:01:43 IDT" name="setup" finished-at="2022-06-20T16:01:52 IDT" duration-ms="8459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.OpenExistingTrip@59496961]" started-at="2022-06-20T16:01:52 IDT" name="setup" finished-at="2022-06-20T16:01:59 IDT" duration-ms="7824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="openExistingTrip()[pri:0, instance:tests.OpenExistingTrip@59496961]" started-at="2022-06-20T16:01:59 IDT" name="openExistingTrip" description="Open exist trip on my trips by name" finished-at="2022-06-20T16:02:12 IDT" duration-ms="12478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openExistingTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.OpenExistingTrip@59496961]" started-at="2022-06-20T16:02:12 IDT" name="tearDown" finished-at="2022-06-20T16:02:17 IDT" duration-ms="5314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.OpenExistingTrip -->
      <class name="tests.DeleteMyTrip">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.DeleteMyTrip@289fdb08]" started-at="2022-06-20T15:35:05 IDT" name="setup" finished-at="2022-06-20T15:35:28 IDT" duration-ms="23409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.DeleteMyTrip@289fdb08]" started-at="2022-06-20T15:35:28 IDT" name="setup" finished-at="2022-06-20T15:35:36 IDT" duration-ms="7386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteMyTrip()[pri:0, instance:tests.DeleteMyTrip@289fdb08]" started-at="2022-06-20T15:35:36 IDT" name="deleteMyTrip" description="Delete trip by name" finished-at="2022-06-20T15:35:48 IDT" duration-ms="12232" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at tests.DeleteMyTrip.deleteMyTrip(DeleteMyTrip.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteMyTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DeleteMyTrip@289fdb08]" started-at="2022-06-20T15:35:48 IDT" name="tearDown" finished-at="2022-06-20T15:35:53 IDT" duration-ms="5268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DeleteMyTrip -->
      <class name="tests.CreateNewFlexibleTripByRunningCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByRunningCategory@7e2f86e6]" started-at="2022-06-20T15:44:38 IDT" name="setup" finished-at="2022-06-20T15:44:42 IDT" duration-ms="4050" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByRunningCategory@7e2f86e6]" started-at="2022-06-20T15:44:42 IDT" name="setup" finished-at="2022-06-20T15:44:49 IDT" duration-ms="7492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByRunningCategory()[pri:0, instance:tests.CreateNewFlexibleTripByRunningCategory@7e2f86e6]" started-at="2022-06-20T15:44:49 IDT" name="createNewFlexibleTripByRunningCategory" description="valid the running sub category graph value" finished-at="2022-06-20T15:45:22 IDT" duration-ms="32246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByRunningCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByRunningCategory@7e2f86e6]" started-at="2022-06-20T15:45:22 IDT" name="tearDown" finished-at="2022-06-20T15:45:27 IDT" duration-ms="5247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByRunningCategory -->
      <class name="tests.CreateNewFlexibleTripByRecreationCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByRecreationCategory@7ce9e05a]" started-at="2022-06-20T15:41:31 IDT" name="setup" finished-at="2022-06-20T15:41:37 IDT" duration-ms="5484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByRecreationCategory@7ce9e05a]" started-at="2022-06-20T15:41:37 IDT" name="setup" finished-at="2022-06-20T15:41:44 IDT" duration-ms="7391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByRecreationCategory()[pri:0, instance:tests.CreateNewFlexibleTripByRecreationCategory@7ce9e05a]" started-at="2022-06-20T15:41:44 IDT" name="createNewFlexibleTripByRecreationCategory" description="valid the recreation sub category graph value" finished-at="2022-06-20T15:42:22 IDT" duration-ms="37497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByRecreationCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByRecreationCategory@7ce9e05a]" started-at="2022-06-20T15:42:22 IDT" name="tearDown" finished-at="2022-06-20T15:42:27 IDT" duration-ms="5264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByRecreationCategory -->
      <class name="tests.LogOutTest">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.LogOutTest@3bead518]" started-at="2022-06-20T15:30:28 IDT" name="setup" finished-at="2022-06-20T15:30:37 IDT" duration-ms="8748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LogOutTest@3bead518]" started-at="2022-06-20T15:30:37 IDT" name="setup" finished-at="2022-06-20T15:30:44 IDT" duration-ms="7291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="logOutTest()[pri:0, instance:tests.LogOutTest@3bead518]" started-at="2022-06-20T15:30:44 IDT" name="logOutTest" description="Log out user" finished-at="2022-06-20T15:30:48 IDT" duration-ms="3349" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'RAZ_VARDI', ip: '192.168.1.19', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [371a1ceb65d64338e099d6a0136133fe, clickElement {id=c7461188-5ab0-4263-be58-b640dd268f43}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\razva\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:53420}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:53420/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (371a1ceb65d64338e099d6a0136133fe)] -> css selector: button.nav-right-menu__item]
Session ID: 371a1ceb65d64338e099d6a0136133fe]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'RAZ_VARDI', ip: '192.168.1.19', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [371a1ceb65d64338e099d6a0136133fe, clickElement {id=c7461188-5ab0-4263-be58-b640dd268f43}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\razva\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:53420}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:53420/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (371a1ceb65d64338e099d6a0136133fe)] -> css selector: button.nav-right-menu__item]
Session ID: 371a1ceb65d64338e099d6a0136133fe
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy18.click(Unknown Source)
at pageObjects.BasePage.click(BasePage.java:29)
at pageObjects.MainPage.logout(MainPage.java:114)
at tests.LogOutTest.logOutTest(LogOutTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LogOutTest@3bead518]" started-at="2022-06-20T15:30:48 IDT" name="tearDown" finished-at="2022-06-20T15:30:53 IDT" duration-ms="5258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LogOutTest -->
      <class name="tests.CreateNewFlexibleTripByIslandsAndBeachesCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByIslandsAndBeachesCategory@53ac845a]" started-at="2022-06-20T15:47:23 IDT" name="setup" finished-at="2022-06-20T15:47:27 IDT" duration-ms="3963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByIslandsAndBeachesCategory@53ac845a]" started-at="2022-06-20T15:47:27 IDT" name="setup" finished-at="2022-06-20T15:47:35 IDT" duration-ms="7412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByIslandsAndBeachesCategory()[pri:0, instance:tests.CreateNewFlexibleTripByIslandsAndBeachesCategory@53ac845a]" started-at="2022-06-20T15:47:35 IDT" name="createNewFlexibleTripByIslandsAndBeachesCategory" description="valid the blue sub category graph value" finished-at="2022-06-20T15:48:10 IDT" duration-ms="35957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByIslandsAndBeachesCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByIslandsAndBeachesCategory@53ac845a]" started-at="2022-06-20T15:48:10 IDT" name="tearDown" finished-at="2022-06-20T15:48:16 IDT" duration-ms="5261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByIslandsAndBeachesCategory -->
      <class name="tests.CreateNewFlexibleTripByFootballCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByFootballCategory@3c6aa04a]" started-at="2022-06-20T15:30:53 IDT" name="setup" finished-at="2022-06-20T15:30:59 IDT" duration-ms="5527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByFootballCategory@3c6aa04a]" started-at="2022-06-20T15:30:59 IDT" name="setup" finished-at="2022-06-20T15:31:06 IDT" duration-ms="7248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByFootballCategory()[pri:0, instance:tests.CreateNewFlexibleTripByFootballCategory@3c6aa04a]" started-at="2022-06-20T15:31:06 IDT" name="createNewFlexibleTripByFootballCategory" description="valid the football sub category graph value" finished-at="2022-06-20T15:31:45 IDT" duration-ms="38676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByFootballCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByFootballCategory@3c6aa04a]" started-at="2022-06-20T15:31:45 IDT" name="tearDown" finished-at="2022-06-20T15:31:50 IDT" duration-ms="5270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByFootballCategory -->
      <class name="tests.CreateNewFlexibleRomanticTrip">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleRomanticTrip@5136207f]" started-at="2022-06-20T15:48:16 IDT" name="setup" finished-at="2022-06-20T15:48:39 IDT" duration-ms="23390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleRomanticTrip@5136207f]" started-at="2022-06-20T15:48:39 IDT" name="setup" finished-at="2022-06-20T15:48:49 IDT" duration-ms="9659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleRomanticTrip()[pri:0, instance:tests.CreateNewFlexibleRomanticTrip@5136207f]" started-at="2022-06-20T15:48:49 IDT" name="createNewFlexibleRomanticTrip" description="valid the romantic category graph value" finished-at="2022-06-20T15:49:44 IDT" duration-ms="55451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleRomanticTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleRomanticTrip@5136207f]" started-at="2022-06-20T15:49:44 IDT" name="tearDown" finished-at="2022-06-20T15:49:50 IDT" duration-ms="5271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleRomanticTrip -->
      <class name="tests.ChangeCurrencyTest">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.ChangeCurrencyTest@2257fadf]" started-at="2022-06-20T15:31:50 IDT" name="setup" finished-at="2022-06-20T15:31:56 IDT" duration-ms="5851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="changeCurrencyToDollarTest()[pri:0, instance:tests.ChangeCurrencyTest@2257fadf]" started-at="2022-06-20T15:31:56 IDT" name="changeCurrencyToDollarTest" description="Change currency to dollar" finished-at="2022-06-20T15:32:03 IDT" duration-ms="6923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeCurrencyToDollarTest -->
        <test-method signature="changeCurrencyToEuroTest()[pri:0, instance:tests.ChangeCurrencyTest@2257fadf]" started-at="2022-06-20T15:32:03 IDT" name="changeCurrencyToEuroTest" description="Change currency To euro" finished-at="2022-06-20T15:32:09 IDT" duration-ms="6842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeCurrencyToEuroTest -->
        <test-method signature="changeCurrencyToShekelTest()[pri:0, instance:tests.ChangeCurrencyTest@2257fadf]" started-at="2022-06-20T15:32:09 IDT" name="changeCurrencyToShekelTest" description="Change currency To shekel" finished-at="2022-06-20T15:32:18 IDT" duration-ms="8724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeCurrencyToShekelTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ChangeCurrencyTest@2257fadf]" started-at="2022-06-20T15:32:18 IDT" name="tearDown" finished-at="2022-06-20T15:32:23 IDT" duration-ms="5258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ChangeCurrencyTest -->
      <class name="tests.CreateNewFlexibleTripTest">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripTest@344426bf]" started-at="2022-06-20T15:52:27 IDT" name="setup" finished-at="2022-06-20T15:52:44 IDT" duration-ms="16660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripTest@344426bf]" started-at="2022-06-20T15:52:44 IDT" name="setup" finished-at="2022-06-20T15:52:53 IDT" duration-ms="8801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTrip()[pri:0, instance:tests.CreateNewFlexibleTripTest@344426bf]" started-at="2022-06-20T15:52:53 IDT" name="createNewFlexibleTrip" description="valid tirp by random city" finished-at="2022-06-20T15:53:25 IDT" duration-ms="32398" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button class="btn-dark-blue btn" dir="ltr" type="button" title="" style="">...</button> is not clickable at point (841, 578). Other element would receive the click: <div class="react-joyride__overlay" style="cursor: pointer; height: 6360px; pointer-events: auto; inset: 0px; overflow: hidden; position: absolute; z-index: 1000; background-color: rgba(9, 14, 40, 0.4); mix-blend-mode: hard-light;">...</div>
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'RAZ_VARDI', ip: '192.168.1.19', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ce499b59abc86af093da18b3701b9816, clickElement {id=fac83194-215f-4a3a-82cf-27aad2014130}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\razva\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55377}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55377/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (ce499b59abc86af093da18b3701b9816)] -> css selector: [class='btn-dark-blue btn']]
Session ID: ce499b59abc86af093da18b3701b9816]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button class="btn-dark-blue btn" dir="ltr" type="button" title="" style="">...</button> is not clickable at point (841, 578). Other element would receive the click: <div class="react-joyride__overlay" style="cursor: pointer; height: 6360px; pointer-events: auto; inset: 0px; overflow: hidden; position: absolute; z-index: 1000; background-color: rgba(9, 14, 40, 0.4); mix-blend-mode: hard-light;">...</div>
  (Session info: chrome=102.0.5005.115)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'RAZ_VARDI', ip: '192.168.1.19', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ce499b59abc86af093da18b3701b9816, clickElement {id=fac83194-215f-4a3a-82cf-27aad2014130}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.115, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\razva\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55377}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55377/devtoo..., se:cdpVersion: 102.0.5005.115, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (ce499b59abc86af093da18b3701b9816)] -> css selector: [class='btn-dark-blue btn']]
Session ID: ce499b59abc86af093da18b3701b9816
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy18.click(Unknown Source)
at pageObjects.BasePage.click(BasePage.java:29)
at pageObjects.MainPage.createNewFlexibleTrip(MainPage.java:343)
at tests.CreateNewFlexibleTripTest.createNewFlexibleTrip(CreateNewFlexibleTripTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripTest@344426bf]" started-at="2022-06-20T15:53:25 IDT" name="tearDown" finished-at="2022-06-20T15:53:30 IDT" duration-ms="5262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripTest -->
      <class name="tests.CreateNewFlexibleTripByVacationCategory">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:tests.CreateNewFlexibleTripByVacationCategory@5411dd90]" started-at="2022-06-20T15:53:30 IDT" name="setup" finished-at="2022-06-20T15:53:36 IDT" duration-ms="5289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5171e9eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CreateNewFlexibleTripByVacationCategory@5411dd90]" started-at="2022-06-20T15:53:36 IDT" name="setup" finished-at="2022-06-20T15:53:43 IDT" duration-ms="7235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewFlexibleTripByVacationCategory()[pri:0, instance:tests.CreateNewFlexibleTripByVacationCategory@5411dd90]" started-at="2022-06-20T15:53:43 IDT" name="createNewFlexibleTripByVacationCategory" description="valid the vacation sub category graph value" finished-at="2022-06-20T15:54:52 IDT" duration-ms="68844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewFlexibleTripByVacationCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CreateNewFlexibleTripByVacationCategory@5411dd90]" started-at="2022-06-20T15:54:52 IDT" name="tearDown" finished-at="2022-06-20T15:54:57 IDT" duration-ms="5273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CreateNewFlexibleTripByVacationCategory -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
